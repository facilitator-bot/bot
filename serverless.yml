service: facilitator-bot
frameworkVersion: "^3.7.1"
variablesResolutionMode: 20210326
useDotenv: true
provider:
  name: aws
  runtime: nodejs14.x
  stage: ${opt:stage}
  region: ap-northeast-1
  lambdaHashingVersion: "20201221"
  apiGateway:
    shouldStartNameWithService: true
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource: "*"
        - Action:
            - dynamodb:GetItem
            - dynamodb:GetRecords
            - dynamodb:PutItem
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:UpdateItem
            - dynamodb:DescribeTable
          Resource: arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/${self:custom.${self:provider.stage}.ddb_candidates_table}
          Effect: Allow
custom:
  dev:
    ddb_candidates_table: ${env:ddb_candidates_table}
    slack:
      SLACK_SIGNING_SECRET: ${env:SLACK_SIGNING_SECRET}
      SLACK_BOT_TOKEN: ${env:SLACK_BOT_TOKEN}
      REMINDER_CHANNEL: ${env:REMINDER_CHANNEL}
  stg:
    ddb_candidates_table: facilitator-bot-candidates
    slack: ${ssm:/aws/reference/secretsmanager/facilitator-bot-slack}

functions:
  remind_facilitator:
    handler: cron_handler.handler
    environment:
      SLACK_SIGNING_SECRET: ${self:custom.${self:provider.stage}.slack.SLACK_SIGNING_SECRET}
      SLACK_BOT_TOKEN: ${self:custom.${self:provider.stage}.slack.SLACK_BOT_TOKEN}
      REMINDER_CHANNEL: ${self:custom.${self:provider.stage}.slack.REMINDER_CHANNEL}
      ddb_candidates_table: ${self:custom.${self:provider.stage}.ddb_candidates_table}
    events:
      - schedule:
          rate: cron(25 1 ? * MON-FRI *)
          enabled: true
  skip_command:
    handler: command_handler.handler
    environment:
      SLACK_SIGNING_SECRET: ${self:custom.${self:provider.stage}.slack.SLACK_SIGNING_SECRET}
      SLACK_BOT_TOKEN: ${self:custom.${self:provider.stage}.slack.SLACK_BOT_TOKEN}
      REMINDER_CHANNEL: ${self:custom.${self:provider.stage}.slack.REMINDER_CHANNEL}
      ddb_candidates_table: ${self:custom.${self:provider.stage}.ddb_candidates_table}
    events:
      - http:
          method: POST
          path: /skip
resources:
  Resources:
    CandidateTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.${self:provider.stage}.ddb_candidates_table}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: name
            AttributeType: S
        KeySchema:
          - AttributeName: name
            KeyType: HASH
        SSESpecification:
          SSEEnabled: true
plugins:
  - serverless-pseudo-parameters
  - serverless-offline
  - serverless-plugin-typescript
